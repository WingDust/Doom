#+TITLE: +Org 

*  lexical
#+begin_src emacs-lisp
;;; -*- lexical-binding: t; -*-
#+end_src

*  直接显示 加粗 、 删除线 、 强调

#+begin_src emacs-lisp
(setq org-hide-emphasis-markers t)
#+end_src

* 去掉标题的小白点

#+begin_src emacs-lisp
(setq org-superstar-leading-bullet "  ")
#+end_src

* 将空行作为 Org Mode 内容一部分，以解决展开标题不会展开空行

#+begin_src emacs-lisp
(setq org-cycle-separator-lines -1)
#+end_src
- [[https://stackoverflow.com/questions/40332479/org-mode-folding-considers-whitespace-as-content][org-mode folding considers whitespace as content]]
- [[https://emacs.stackexchange.com/questions/21789/org-mode-blank-line-at-the-end-of-tree][Org-mode blank line at the end of tree]]
- [[https://www.reddit.com/r/emacs/comments/749t8a/keep_a_blank_line_after_a_code_block_in_orgmode/][Keep a blank line after a code block in org-mode]]

* Org mode literate Programming
** python

#+begin_src emacs-lisp
;;;'org-babel-execute:python
(setq python-shell-interpreter "/usr/bin/python"
        org-babel-python-command "/usr/bin/python"
        )
#+end_src

** js

#+begin_src emacs-lisp
(require 'ob-js)
#+end_src


** load

#+begin_src emacs-lisp
(with-eval-after-load 'org
    (org-babel-do-load-languages
    'org-babel-load-languages
    '(  (emacs-lisp . t)
        (python . t)
        (js . t)
        (rust . t)
        (deno . t)
        (cc   . t)
        ;;(powershell . t)
    ))
)
#+end_src

* Org 列表显示为 dot 字符

#+begin_src emacs-lisp
 (font-lock-add-keywords 'org-mode
                          '(("^ *\\([-]\\) "
                             (0 (prog1 () (compose-region (match-beginning 1) (match-end 1) "•"))))))
#+end_src
- [[https://zzamboni.org/post/beautifying-org-mode-in-emacs/][list markers]]

* Tag 右对齐

#+begin_src emacs-lisp
(after! org
  (setq org-tags-column -80)
   ;; ... other org configuration here
)
;; SPA-u C-c C-c
#+end_src
- [[https://emacs-china.org/t/org-mode-tag/8238][org mode TAG 不能右边对齐了]]
- [[https://emacs.stackexchange.com/questions/56287/org-mode-tag-column-setting-is-ignored][Org mode tag column setting is ignored]]


* 折叠字符

#+begin_src emacs-lisp
(setq org-ellipsis "⤵")
#+end_src

* bullet

#+begin_src emacs-lisp
(after! org-superstar
    (setq org-superstar-headline-bullets-list '("⬡" "◉" "›" "▷" "○");;◆
        org-superstar-prettify-item-bullets t )
        (setq org-superstar-item-bullet-alist '((?* . ?•)
                                                (?+ . ?•)
                                                (?- . ?•)))
    )
#+end_src

* 隐藏 heading * 符号

#+begin_quote
对于这些不在 Elpa 上需要 require 
#+end_quote
#+begin_src emacs-lisp
;;(require 'org-starless)
;;(add-hook 'org-mode-hook #'org-starless-mode)
#+end_src

* 对齐 Org mode 的表格

#+begin_src emacs-lisp
(add-hook 'org-mode-hook #'valign-mode)
(add-hook 'markdown-mode-hook #'valign-mode)
#+end_src

* 让 Org-refile 能支持移动到文件的 topmost level

#+begin_src emacs-lisp

;; (setq org-refile-targets '((nil :maxlevel . 9)
;;                            (org-agenda-files :maxlevel . 3)
;;                            (org-buffer-list :maxlevel . 2)))

(setq
    org-outline-path-complete-in-steps nil
    org-refile-allow-creating-parent-nodes 'confirm
    org-refile-use-outline-path 'file
    org-refile-targets '((nil :maxlevel . 5)
                           (org-agenda-files :maxlevel . 4))
    )

#+end_src
- [[https://emacs.stackexchange.com/questions/55014/how-do-i-move-a-subtree-to-another-file][(setq org-refile-use-outline-path 'file)]]
- [[https://emacs.stackexchange.com/questions/36505/org-mode-refile-multiple-locations-with-same-name-as-target][Org mode refile - multiple locations with same name as target
]]
* 将 Org mode 中的标记语言渲染的样子临时还原为文本的，以便于修改

#+begin_src emacs-lisp
(add-hook 'org-mode-hook 'org-appear-mode)
(setq org-appear-autolinks t)
#+end_src


* Format Org file

#+begin_src emacs-lisp
(defun nm/add-newline-between-headlines ()
  ""
  (when (equal major-mode 'org-mode)
    (unless (org-at-heading-p)
      (org-back-to-heading))
    (nm/org-end-of-headline)
    (if (not (org--line-empty-p 1))
        (newline))))
(defun nm/org-end-of-headline()
  "Move to end of current headline"
  (interactive)
  (outline-next-heading)
  (forward-char -1))
(defun nm/newlines-between-headlines ()
  "Uses the org-map-entries function to scan through a buffer's
   contents and ensure newlines are inserted between headlines"
  (interactive)
  (org-map-entries #'nm/add-newline-between-headlines t 'file))
#+end_src
- [[https://github.com/nmartin84/.doom.d][Orgmode Formating]]
  
* fold other expecrt current headline
#+begin_src emacs-lisp
(defun org-show-current-heading-tidily ()
  (interactive)  ;Inteactive
  "Show next entry, keeping other entries closed."
  (if (save-excursion (end-of-line) (outline-invisible-p))
      ;;(progn (org-show-entry) (show-children))
      (progn (org-show-entry) (outline-show-children))
    (outline-back-to-heading)
    ;;(unless (and (bolp) (org-on-heading-p))
    (unless (and (bolp) (org-at-heading-p))
      (org-up-heading-safe)
      ;;(hide-subtree)
      (outline-hide-subtree)
      (error "Boundary reached"))
    (org-overview)
    (org-reveal t)
    (org-show-entry)
    ;;(show-children)))
    (outline-show-children)))
#+end_src
- [[https://stackoverflow.com/questions/25161792/emacs-org-mode-how-can-i-fold-everything-but-the-current-headline][Emacs org-mode: How can i fold everything but the current headline]]
* line spacing
#+begin_src emacs-lisp
;; (add-hook 'org-mode-hook
;;     (setq line-spacing 0.1)
;;     (setq header-line-format " ")
;;     (lambda () (progn
;;         (setq left-margin-width 2)
;;         (setq right-margin-width 2)
;;         (set-window-buffer nil (current-buffer))))
;;           )
#+end_src
* Top padding
#+begin_src emacs-lisp
;; (setq header-line-format " ")
#+end_src

* Side padding
#+begin_src emacs-lisp
;; (lambda () (progn
;;   (setq left-margin-width 2)
;;   (setq right-margin-width 2)
;;   (set-window-buffer nil (current-buffer))))
#+end_src
